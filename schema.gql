# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TrackCoverObject {
  list: String!
  list2x: String!
  wide: String!
  wide2x: String!
}

type TrackUrlObject {
  page: String!
  map: String!
  audio: String!
}

type TrackObject {
  id: ID!
  title: String!
  artist: String!
  played: Float!
  liked: Float!
  duration: Float!
  cover: TrackCoverObject!
  url: TrackUrlObject!
}

type DeviceObject {
  id: ID!
  userId: String!
  type: DeviceType!
  model: String
  os: String
}

enum DeviceType {
  DESKTOP
  MOBILE
  TABLET
  CONSOLE
  TV
  OTHER
}

type TracksWithCursorObject {
  data: [TrackObject!]!
  cursor: String
}

type PlaylistObject {
  id: ID!
  title: String!
  public: String!
  cover: String
  userId: String!
  trackIds: [String!]!
  tracks(cursor: String, limit: Float = 50): TracksWithCursorObject!
}

type UserUrlObject {
  avatar: String!
  cover: String!
  profile: String!
}

type UserObject {
  id: ID!
  username: String!
  url: UserUrlObject!
}

type Query {
  myDevices: [DeviceObject!]!
  tracks(search: String, limit: Int, offset: Int): [TrackObject!]!
  track(trackId: String!): TrackObject!
  myTracks(search: String, limit: Int, offset: Int): [TrackObject!]!
  publicPlaylists(search: String): [PlaylistObject!]!
  publicPlaylist(playlistId: String!): PlaylistObject!
  myPlaylists(search: String): [PlaylistObject!]!
  myPlaylist(playlistId: String!): PlaylistObject!
  playlistTracks(playlistId: String!, cursor: String, limit: Int): TracksWithCursorObject!
  me: UserObject!
}

type Mutation {
  addMyTrack(trackId: String!): TrackObject!
  removeMyTrack(trackId: String!): TrackObject!
  moveMyTrack(trackId: String!, position: Float!): TrackObject!
  copyPlaylist(playlistId: String!): PlaylistObject!
  createMyPlaylist(payload: CreatePlaylistInput!): PlaylistObject!
  updateMyPlaylist(playlistId: String!, payload: UpdatePlaylistInput!): PlaylistObject!
  deleteMyPlaylist(playlistId: String!): PlaylistObject!
  addPlaylistTrack(playlistId: String!, trackId: String!): TrackObject!
  removePlaylistTrack(playlistId: String!, trackId: String!): TrackObject!
  movePlaylistTrack(playlistId: String!, trackId: String!, position: Float!): TrackObject!
}

input CreatePlaylistInput {
  title: String!
  public: String!
}

input UpdatePlaylistInput {
  title: String
  public: String
}

type Subscription {
  deviceConnected: DeviceObject!
  deviceDisconnected: DeviceObject!
}